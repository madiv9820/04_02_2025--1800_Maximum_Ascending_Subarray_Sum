from Solution import Solution
from timeout_decorator import timeout
import unittest

class UnitTest(unittest.TestCase):
    def setUp(self):
        self.__testcases = {1: ([10,20,30,5,10,50], 65), 2: ([10,20,30,40,50], 150), 
                            3: ([12,17,15,13,10,11,12], 33), 4: ([100,10,1], 100), 
                            5: ([3,6,10,1,8,9,9,8,9], 19), 6: ([1,2,3,4,5], 15), 
                            7: ([10,20,30,40,50,60], 210), 8: ([1,2,3,4,5,6,7,8,9], 45), 
                            9: ([1,2,3,4,5,6,7,8,9,10], 55), 10: ([1,2,3,4,5,6,7,8,9,10,11], 66),
                            11: ([1,2,3,4,5,6,7,8,9,10,11,12], 78), 12: ([1,2,3,4,5,6,7,8,9,10,11,12,13], 91),
                            13: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14], 105), 14: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 120),
                            15: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16], 136), 16: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17], 153),
                            17: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18], 171), 18: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19], 190),
                            19: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], 210), 20: ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21], 231)}
        self.__sol = Solution()
        return super().setUp()
    
    @timeout(2)
    def test_cases(self):
        for key in self.__testcases:
            self.assertEqual(self.__sol.maxAscendingSum(self.__testcases[key][0]), self.__testcases[key][1])

if __name__ == '__main__':
    unittest.main()